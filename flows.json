[
    {
        "id": "5d60c43b4b924270",
        "type": "tab",
        "label": "Home",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "46f45eec56bea94f",
        "type": "tab",
        "label": "Recording DB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d5ec438b7021569d",
        "type": "tab",
        "label": "API",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "26ed8a12ce112e81",
        "type": "tab",
        "label": "Initialize",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3f1fe65c928d1b37",
        "type": "group",
        "z": "26ed8a12ce112e81",
        "name": "Dashboard cameras",
        "style": {
            "label": true
        },
        "nodes": [
            "cee7f705606ed449",
            "b72607fb480b715c",
            "b9838eeea99b35b3",
            "62acb83a893d38e4",
            "491261edf4153908",
            "29b2d943afaae901",
            "35b69cecb8ea35fe",
            "02755cfefa4232a9",
            "4617cacb43a7db1c",
            "32ce32d6ed6b7b62",
            "99bcc26f1ae73ec9",
            "362848deeb8c041e",
            "95561d2d20e130da",
            "c3a8eb0cdd03e8aa",
            "4bfd0faa5c697cf6",
            "2a5dbdc97a9681be",
            "20dcfbcf1d59a890",
            "929842cacfdd1236",
            "abd348d4a5b3dc2e",
            "f4bfa0e75dc06256",
            "ab3991961bd3c689",
            "f7f6f2b595a4941d",
            "ff9a15e6fd836f78",
            "20be60eebaf821f2",
            "d8c93f8720f169d2"
        ],
        "x": 254,
        "y": 899
    },
    {
        "id": "f016075ba057df3b",
        "type": "group",
        "z": "26ed8a12ce112e81",
        "name": "Initialize cameras",
        "style": {
            "label": true
        },
        "nodes": [
            "036b4a5c7d7ad9b1",
            "c42f6dbfbe94d7ca",
            "48dbdd64e4622981",
            "07fe5cd686ac7ea1",
            "026703afda827fbc",
            "0433c4b6aac855b2",
            "70fdd482a971e7e0",
            "aac89c8a27b84eca",
            "bad27c6d0a0ef447",
            "391451537d1f279a",
            "5687cb0fd5c3bf18",
            "4e3d3173d076b5fb",
            "4591357985e45c29",
            "cd656acd3a5a5530",
            "30fefe770d302b6d"
        ],
        "x": 254,
        "y": 539
    },
    {
        "id": "4024b3d5b06eaa70",
        "type": "group",
        "z": "26ed8a12ce112e81",
        "name": "Recordin loggong",
        "style": {
            "label": true
        },
        "nodes": [
            "b3d0c92c292bb897",
            "d82c77bd7e6f636d",
            "1111bfab18741258",
            "b7afe69b4331fda0"
        ],
        "x": 254,
        "y": 79
    },
    {
        "id": "54ca9f41add64fe2",
        "type": "group",
        "z": "26ed8a12ce112e81",
        "name": "Influx Initialization ",
        "style": {
            "label": true
        },
        "nodes": [
            "1bdda2d779bd414b",
            "0223bcbde4ba566b",
            "3eb50965e15b84df",
            "bd39b74ddced4dad"
        ],
        "x": 254,
        "y": 259
    },
    {
        "id": "2950bfd809e8f76c",
        "type": "group",
        "z": "26ed8a12ce112e81",
        "name": "Add Camera",
        "style": {
            "label": true
        },
        "nodes": [
            "8d082fd7fcf66879",
            "0a0a562e6325b4f1",
            "6d7ea8bfb8a49488",
            "ef292a8d5fe196b4",
            "cc5aa5530525d32b",
            "b23cf982a5f1157b",
            "2f271b4f188d8575",
            "acbbd1fa53311e57",
            "5bae5cea507de3b8",
            "28d29ae124b03f61",
            "bfb26fb16387994f",
            "00dc9c9ec4b8afd2",
            "e60d9ed334ebadc0",
            "88a3c798a2fb8df9",
            "9f7963464dc9d4d3",
            "2d22233054ab139b",
            "7bb218b6d5535f2b",
            "1c00af47e14291e0",
            "ba2a0f14177b57b4",
            "ba79fb462cbfd9ef",
            "f8352062c98ae40c",
            "915365a5a7182a7c",
            "892fd8e277dee413",
            "fcbf19de33f1a9c1",
            "1489927555c565d0",
            "9c3cbb19dc54433a",
            "b12132b9eec68a83",
            "7c4c3ee7b47ce30e",
            "4166df8c0fb59d4e",
            "e38971d140b97b87"
        ],
        "x": 254,
        "y": 1459
    },
    {
        "id": "960cb6dc51e99160",
        "type": "group",
        "z": "26ed8a12ce112e81",
        "name": "Export docker-compose",
        "style": {
            "label": true
        },
        "nodes": [
            "363186c651fd7562",
            "d72854b26c82f511",
            "f61d64384a2d9d5b",
            "8026e7e0bf67cd5d",
            "6555ea16c270dead",
            "21b9d4f2525b19a7",
            "8332450cf3330e20",
            "9c9b1a954e8fb836",
            "4771f38ee6e3fd53",
            "6caa872a021c4207",
            "a832b605b858e3f4"
        ],
        "x": 254,
        "y": 2059
    },
    {
        "id": "8da94ea605c8d5d2",
        "type": "group",
        "z": "d5ec438b7021569d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "c3423179e25b25e9",
            "25df46ca51e1d3a6",
            "57cf37efcb2a282d",
            "c9a57b8f6c6419d2",
            "9903b1d55a033ef5",
            "d2e8ca621587342b",
            "d06f8fbc2e54e335",
            "6aaf32bbd5db43ef",
            "f05241a3bd89cc2c",
            "285f7390e87e0d7d",
            "99daca933a43710e",
            "ab3da743a8f6d0a0",
            "afb4e2f05dce25f1",
            "24075df70779e52a",
            "e788bfb14ce3e141",
            "b46faa264e7591ee"
        ],
        "x": 334,
        "y": 639
    },
    {
        "id": "8ead32b02e2d7c73",
        "type": "group",
        "z": "d5ec438b7021569d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4df8abd39c90e046",
            "2de8edc0f8e86efc",
            "67e3602f4464f68f",
            "729855eb6c8a32da",
            "e6d57c9e17d6c800",
            "5bbab81fc5176d34"
        ],
        "x": 294,
        "y": 59
    },
    {
        "id": "89a58f3caee2f48d",
        "type": "group",
        "z": "d5ec438b7021569d",
        "name": "Stop Recording",
        "style": {
            "label": true
        },
        "nodes": [
            "35f878545ceddcd9",
            "b9ebeadf01ddee55",
            "1cd5bce5f8cb1686",
            "ebbbd15e17f38520",
            "2a77615d8fb3ee44",
            "546a699f0eb3afc3",
            "1a7095b61ae118e9",
            "98021178fc48daa2",
            "e0bc51777556a866",
            "54d040ce0124a8c9",
            "c5f6c796290c9063",
            "c01494dc62de7eb5"
        ],
        "x": 334,
        "y": 1479
    },
    {
        "id": "20dcfbcf1d59a890",
        "type": "junction",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "x": 1140,
        "y": 1300,
        "wires": [
            [
                "4034a60f2622a799",
                "c18d4120205bc8b7"
            ]
        ]
    },
    {
        "id": "32ce32d6ed6b7b62",
        "type": "junction",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "x": 300,
        "y": 1060,
        "wires": [
            [
                "362848deeb8c041e",
                "abd348d4a5b3dc2e",
                "f7f6f2b595a4941d"
            ]
        ]
    },
    {
        "id": "2a77615d8fb3ee44",
        "type": "junction",
        "z": "d5ec438b7021569d",
        "g": "89a58f3caee2f48d",
        "x": 980,
        "y": 1520,
        "wires": [
            [
                "924f53885fdb82b0",
                "8ac95b80b9661dc6",
                "76e2d1b82ea8c525"
            ]
        ]
    },
    {
        "id": "546a699f0eb3afc3",
        "type": "junction",
        "z": "d5ec438b7021569d",
        "g": "89a58f3caee2f48d",
        "x": 1020,
        "y": 1680,
        "wires": [
            [
                "631439502d060137",
                "12061cabdb3ed28d",
                "1a9233719e0c32bb"
            ]
        ]
    },
    {
        "id": "98021178fc48daa2",
        "type": "junction",
        "z": "d5ec438b7021569d",
        "g": "89a58f3caee2f48d",
        "x": 1020,
        "y": 1820,
        "wires": [
            [
                "d237cd6420d02271",
                "531c54ba8eab1e40"
            ]
        ]
    },
    {
        "id": "c01494dc62de7eb5",
        "type": "junction",
        "z": "d5ec438b7021569d",
        "g": "89a58f3caee2f48d",
        "x": 1020,
        "y": 1900,
        "wires": [
            [
                "48ac631377e528df",
                "ec12d0d2005780b5"
            ]
        ]
    },
    {
        "id": "97fd97198befb71e",
        "type": "mqtt-broker",
        "name": "Broker",
        "broker": "${MQTT_ADDRESS}",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "bdeb176601a03c87",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Recorder",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "78eb60079705b811",
        "type": "ui_group",
        "name": "Cameras",
        "tab": "0863caa7165c2548",
        "order": 1,
        "disp": true,
        "width": "13",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6542dda0146a98e2",
        "type": "ui_group",
        "name": "Camera",
        "tab": "0863caa7165c2548",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ca2547b7188cdec3",
        "type": "influxdb",
        "hostname": "influxdb",
        "port": "8086",
        "protocol": "http",
        "database": "log",
        "name": "Log",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://influxdb:8086",
        "timeout": "",
        "rejectUnauthorized": true
    },
    {
        "id": "4d798c5620c1ed0c",
        "type": "ui_group",
        "name": "List",
        "tab": "a466b29d04f7bcf3",
        "order": 1,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0863caa7165c2548",
        "type": "ui_tab",
        "name": "Cameras",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a466b29d04f7bcf3",
        "type": "ui_tab",
        "name": "Recordings",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "651bcdc1f2d63e9b",
        "type": "minio-config",
        "name": "MinIO Instance",
        "host": "${MINIO_ADDRESS}",
        "port": "9000",
        "useSsl": false
    },
    {
        "id": "e56454e70d21f257",
        "type": "ui_link",
        "name": "Flows",
        "link": "/admin",
        "icon": "open_in_browser",
        "target": "newtab",
        "order": 4
    },
    {
        "id": "fafbed826f0a0088",
        "type": "ACS Server",
        "name": "ENV Settings",
        "address": "",
        "port": "55756"
    },
    {
        "id": "bb2b6741360f437e",
        "type": "ui_group",
        "name": "Add Camera",
        "tab": "0863caa7165c2548",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9838b1d896d4b770",
        "type": "Device Access",
        "name": "inject",
        "address": "",
        "protocol": "http"
    },
    {
        "id": "952bf1331487f6cd",
        "type": "ui_group",
        "name": "Filter",
        "tab": "a466b29d04f7bcf3",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ab8f274ed48d4f4f",
        "type": "inject",
        "z": "5d60c43b4b924270",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 60,
        "wires": [
            [
                "a9e6c4af1793050a"
            ]
        ]
    },
    {
        "id": "a9e6c4af1793050a",
        "type": "ui_button",
        "z": "5d60c43b4b924270",
        "name": "",
        "group": "952bf1331487f6cd",
        "order": 1,
        "width": "4",
        "height": "1",
        "passthru": true,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 340,
        "y": 60,
        "wires": [
            [
                "3904219423e82116",
                "e3ac1663fa100ded"
            ]
        ]
    },
    {
        "id": "702caec86fb4ced8",
        "type": "ui_table",
        "z": "5d60c43b4b924270",
        "group": "4d798c5620c1ed0c",
        "name": "",
        "order": 2,
        "width": "16",
        "height": "13",
        "columns": [
            {
                "field": "time",
                "title": "Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "name",
                "title": "Camera",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "tag",
                "title": "Tag",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "duration",
                "title": "Duration",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "source",
                "title": "Recorder",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "link",
                "title": "Link",
                "width": "",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1110,
        "y": 240,
        "wires": []
    },
    {
        "id": "e96e584d3e4f70f0",
        "type": "function",
        "z": "5d60c43b4b924270",
        "name": "link",
        "func": "msg.payload.link = '<a href=\"' + msg.payload.url + '\" target=\"_blank\">MP4</a>';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 320,
        "wires": [
            [
                "c65f465c1666acef"
            ]
        ]
    },
    {
        "id": "762a5eeeb7322ef3",
        "type": "split",
        "z": "5d60c43b4b924270",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 250,
        "y": 320,
        "wires": [
            [
                "e96e584d3e4f70f0"
            ]
        ]
    },
    {
        "id": "a5d0b2e350f56128",
        "type": "join",
        "z": "5d60c43b4b924270",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 790,
        "y": 320,
        "wires": [
            [
                "702caec86fb4ced8",
                "7d1aafc981bec3bf"
            ]
        ]
    },
    {
        "id": "c65f465c1666acef",
        "type": "moment",
        "z": "5d60c43b4b924270",
        "name": "",
        "topic": "",
        "input": "payload.start",
        "inputType": "msg",
        "inTz": "Europe/Stockholm",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "ddd MMM D HH:mm:ss",
        "locale": "en-US",
        "output": "payload.time",
        "outputType": "msg",
        "outTz": "Europe/Stockholm",
        "x": 620,
        "y": 320,
        "wires": [
            [
                "a5d0b2e350f56128"
            ]
        ]
    },
    {
        "id": "7d1aafc981bec3bf",
        "type": "debug",
        "z": "5d60c43b4b924270",
        "name": "debug 236",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 340,
        "wires": []
    },
    {
        "id": "3904219423e82116",
        "type": "function",
        "z": "5d60c43b4b924270",
        "name": "Cameras",
        "func": "var cameras = global.get(\"cameras\") || {};\nmsg.options = [{\"All\":\"All\"}];\n\nfor( var serial in cameras ) {\nnode.warn(cameras[serial]);\n    var option = {};\n    option[cameras[serial].name] = serial;\n    msg.options.push(option);\n}\n\nvar selected = global.get(\"selectedCamera\");\nif(selected) {\n    msg.payload = selected.serial;\n    return msg;\n}\n\nmsg.payload = \"All\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 60,
        "wires": [
            [
                "5d43347f6eb9f288"
            ]
        ]
    },
    {
        "id": "5d43347f6eb9f288",
        "type": "ui_dropdown",
        "z": "5d60c43b4b924270",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "952bf1331487f6cd",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 700,
        "y": 60,
        "wires": [
            [
                "ac900f29bb23f73c"
            ]
        ]
    },
    {
        "id": "ac900f29bb23f73c",
        "type": "function",
        "z": "5d60c43b4b924270",
        "name": "flow.selected",
        "func": "flow.set(\"selectedCamera\", msg.payload );\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "c42edcc8533ffb27",
        "type": "function",
        "z": "5d60c43b4b924270",
        "name": "Query",
        "func": "var selected = flow.get(\"selectedCamera\");\nvar time = flow.get(\"time\");\nmsg.request = msg.payload;\n\nmsg.query = 'SELECT * FROM recordings';\nvar where = \" WHERE\";\n\nif( selected && selected !== \"All\" ) {\n    msg.query += ' WHERE \"serial\" =\\'' + selected + '\\'';\n    where = \" AND\";\n} \n\nif( time ) {\n    msg.query += where + ' time > now() - ' + time;\n    where = \" AND\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 220,
        "wires": [
            [
                "306b84f25fd3b9a9",
                "9f5ab1bac398bebe"
            ]
        ]
    },
    {
        "id": "306b84f25fd3b9a9",
        "type": "influxdb in",
        "z": "5d60c43b4b924270",
        "influxdb": "ca2547b7188cdec3",
        "name": "",
        "query": "",
        "rawOutput": false,
        "precision": "ms",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 560,
        "y": 220,
        "wires": [
            [
                "a3379a45c8cd2d87",
                "762a5eeeb7322ef3",
                "29ba0b32bee581e0"
            ]
        ]
    },
    {
        "id": "e3ac1663fa100ded",
        "type": "ui_dropdown",
        "z": "5d60c43b4b924270",
        "name": "",
        "label": "Time",
        "tooltip": "",
        "place": "Select option",
        "group": "952bf1331487f6cd",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Last 5 Minutes",
                "value": "5m",
                "type": "str"
            },
            {
                "label": "Last 30 minutes",
                "value": "30m",
                "type": "str"
            },
            {
                "label": "Last hour",
                "value": "1h",
                "type": "str"
            },
            {
                "label": "Last 24 hours",
                "value": "1d",
                "type": "str"
            },
            {
                "label": "Last 5 days",
                "value": "5d",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 510,
        "y": 100,
        "wires": [
            [
                "522a6571e54481d6"
            ]
        ]
    },
    {
        "id": "522a6571e54481d6",
        "type": "change",
        "z": "5d60c43b4b924270",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "2edc46f1ec706258",
        "type": "ui_button",
        "z": "5d60c43b4b924270",
        "name": "",
        "group": "952bf1331487f6cd",
        "order": 1,
        "width": "4",
        "height": "1",
        "passthru": true,
        "label": "Search",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 220,
        "wires": [
            [
                "c42edcc8533ffb27"
            ]
        ]
    },
    {
        "id": "a3379a45c8cd2d87",
        "type": "debug",
        "z": "5d60c43b4b924270",
        "name": "debug 272",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 440,
        "wires": []
    },
    {
        "id": "9f5ab1bac398bebe",
        "type": "debug",
        "z": "5d60c43b4b924270",
        "name": "debug 273",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "query",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 180,
        "wires": []
    },
    {
        "id": "29ba0b32bee581e0",
        "type": "switch",
        "z": "5d60c43b4b924270",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 180,
        "wires": [
            [
                "b1b08c1e720eb0e4"
            ]
        ]
    },
    {
        "id": "b1b08c1e720eb0e4",
        "type": "change",
        "z": "5d60c43b4b924270",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 180,
        "wires": [
            [
                "702caec86fb4ced8"
            ]
        ]
    },
    {
        "id": "8f4ec579f2b66721",
        "type": "influxdb in",
        "z": "5d60c43b4b924270",
        "influxdb": "ca2547b7188cdec3",
        "name": "FLUSH recordings",
        "query": "DROP measurement recordings",
        "rawOutput": false,
        "precision": "ms",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 490,
        "y": 720,
        "wires": [
            [
                "3364a2faaa023c22"
            ]
        ]
    },
    {
        "id": "6244523ccee84969",
        "type": "inject",
        "z": "5d60c43b4b924270",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 720,
        "wires": [
            [
                "8f4ec579f2b66721"
            ]
        ]
    },
    {
        "id": "3364a2faaa023c22",
        "type": "debug",
        "z": "5d60c43b4b924270",
        "name": "debug 297",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 720,
        "wires": []
    },
    {
        "id": "bdfbd3f39decaffd",
        "type": "mqtt in",
        "z": "46f45eec56bea94f",
        "name": "",
        "topic": "recorder/+/event/recorder/chunk_properties",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "97fd97198befb71e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 180,
        "wires": [
            [
                "2da3070115864eae",
                "de99b8f3a2bc0606"
            ]
        ]
    },
    {
        "id": "cc927faaa7d0f889",
        "type": "function",
        "z": "46f45eec56bea94f",
        "name": "Insert",
        "func": "var camera = msg.payload;\n\nvar start = new Date(msg.chunk.start_time).getTime();\nvar end = new Date(msg.chunk.end_time).getTime();\nvar duration = (end - start) / 1000;\n\nmsg.payload = [\n    {\n        start: start,\n        end: end,\n        duration: duration,\n        url: 'http://' + msg.serverAddress + '/mp4?file=' + msg.chunk.media_filename + '&bucket=' + camera.fmr,\n    } , {\n        name: camera.name,\n        serial: camera.serial,\n        tag: msg.chunk.recording_token || \"Recording\",\n        recorder: \"FMR\",\n        resolution: msg.payload.resolution\n    }\n]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 300,
        "wires": [
            [
                "a6c4c430358a0b87",
                "c148c88589c16a12"
            ]
        ]
    },
    {
        "id": "a6c4c430358a0b87",
        "type": "influxdb out",
        "z": "46f45eec56bea94f",
        "influxdb": "ca2547b7188cdec3",
        "name": "",
        "measurement": "recordings",
        "precision": "ms",
        "retentionPolicy": "autogen",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1160,
        "y": 300,
        "wires": []
    },
    {
        "id": "70701e21348481c3",
        "type": "catch",
        "z": "46f45eec56bea94f",
        "name": "",
        "scope": null,
        "uncaught": true,
        "x": 240,
        "y": 40,
        "wires": [
            [
                "03d879e19a71cb73"
            ]
        ]
    },
    {
        "id": "03d879e19a71cb73",
        "type": "debug",
        "z": "46f45eec56bea94f",
        "name": "debug 198",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 40,
        "wires": []
    },
    {
        "id": "2da3070115864eae",
        "type": "change",
        "z": "46f45eec56bea94f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "chunk",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "serverAddress",
                "pt": "msg",
                "to": "SERVER_ADDRESS",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 240,
        "wires": [
            [
                "99156a785f474cdb"
            ]
        ]
    },
    {
        "id": "99156a785f474cdb",
        "type": "function",
        "z": "46f45eec56bea94f",
        "name": "Get Camera by FMR",
        "func": "var fmrID = msg.topic.split('/')[1];\n\nvar cameras = global.get(\"cameras\");\nmsg.payload = false;\nfor(var serial in cameras) {\n    if( cameras[serial].fmr === fmrID )\n        msg.payload = cameras[serial];\n}\n\nif( !msg.payload )\n    return;\n\nif( msg.payload.active === false)\n    return;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 240,
        "wires": [
            [
                "e45e7698f7f420d7",
                "cc927faaa7d0f889",
                "c784a582dab9eb6d"
            ]
        ]
    },
    {
        "id": "0fcfaac592a2b22e",
        "type": "mqtt in",
        "z": "46f45eec56bea94f",
        "name": "",
        "topic": "recorder/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "97fd97198befb71e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 660,
        "y": 40,
        "wires": [
            [
                "0ec6b4ae5cc48b15"
            ]
        ]
    },
    {
        "id": "0ec6b4ae5cc48b15",
        "type": "debug",
        "z": "46f45eec56bea94f",
        "name": "debug 211",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 40,
        "wires": []
    },
    {
        "id": "e45e7698f7f420d7",
        "type": "debug",
        "z": "46f45eec56bea94f",
        "name": "debug 212",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 240,
        "wires": []
    },
    {
        "id": "bd7b77d527793c7d",
        "type": "function",
        "z": "46f45eec56bea94f",
        "name": "Query",
        "func": "\nif( msg.payload.hasOwnProperty(\"timestamp\") ) {\n    if( isNaN(msg.payload.timestamp))\n        msg.payload.timestamp = new Date(msg.payload.timestamp).getTime();\n    else    \n        msg.payload.timestamp = parseInt(msg.payload.timestamp);\n}\n\nif (msg.payload.hasOwnProperty(\"from\")) {\n    if (isNaN(msg.payload.from))\n        msg.payload.from = new Date(msg.payload.from).getTime();\n    else\n        msg.payload.from = parseInt(msg.payload.from);\n}\n\nif (msg.payload.hasOwnProperty(\"to\")) {\n    if (isNaN(msg.payload.to))\n        msg.payload.to = new Date(msg.payload.to).getTime();\n    else\n        msg.payload.to = parseInt(msg.payload.to);\n}\n\n\nmsg.request = msg.payload;\n\nmsg.query = 'SELECT * FROM recordings';\n\nvar where = \" WHERE\";\n\nif( msg.payload.hasOwnProperty(\"serial\") ) {\n    msg.query += ' WHERE \"serial\" =\\'' + msg.payload.serial + '\\'';\n    where = \" AND\";\n} \n\nif( msg.payload.hasOwnProperty(\"timestamp\") ) {\n    msg.query += where + ' \"start\" < ' + msg.request.timestamp;\n    where = \" AND\";\n    msg.query += where + ' \"end\" > ' + msg.request.timestamp;\n    return msg;    \n}\n\nif( msg.payload.hasOwnProperty(\"from\") ) {\n    msg.query += where + ' \"start\" >= ' + new Date(msg.payload.from).getTime();\n    where = \" AND\";\n}\n\nif (msg.payload.hasOwnProperty(\"to\")) {\n    msg.query += where + ' \"end\" < ' + new Date(msg.payload.to).getTime();\n    where = \" AND\";\n}\n\nif (msg.payload.hasOwnProperty(\"duration\")) {\n    msg.query += where + ' \"duration\" > ' + parseInt(msg.payload.duration);\n    where = \" AND\";\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 700,
        "wires": [
            [
                "7cb3729e4fc9e646",
                "25b8c22eabc3f039"
            ]
        ]
    },
    {
        "id": "7cb3729e4fc9e646",
        "type": "influxdb in",
        "z": "46f45eec56bea94f",
        "influxdb": "ca2547b7188cdec3",
        "name": "",
        "query": "",
        "rawOutput": false,
        "precision": "ms",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 350,
        "y": 760,
        "wires": [
            [
                "b5664f5d7b154fa4",
                "473d274e784a453d"
            ]
        ]
    },
    {
        "id": "473d274e784a453d",
        "type": "function",
        "z": "46f45eec56bea94f",
        "name": "Response",
        "func": "var recording = msg.payload[0];\n\nvar list = [];\nmsg.payload.forEach(function(item){\n    var offset = 0;\n    if( msg.request.hasOwnProperty(\"timestamp\") ) {\n        var offset = parseInt((parseInt(msg.request.timestamp) - item.start) / 1000) - 1;\n        if (offset < 0)\n            offset = 0;\n    }\n    var rec = {\n        camera: item.name || null,\n        serial: item.serial || null,\n        start: item.start,\n        end: item.end,\n        duration: item.duration,\n        offset: offset,\n        tag: item.tag || null,\n        url: item.url || null,\n        resolution: item.resolution || null,\n        fps: item.fps || null\n    }\n    list.push(rec);\n})\n\nmsg.payload = list;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 820,
        "wires": [
            [
                "535f425f080e8b33",
                "9c207febe065e4e9"
            ]
        ]
    },
    {
        "id": "02e23ece55e93ef0",
        "type": "link in",
        "z": "46f45eec56bea94f",
        "name": "QUERY",
        "links": [],
        "x": 245,
        "y": 640,
        "wires": [
            [
                "bd7b77d527793c7d",
                "d1087c11c4da240d"
            ]
        ]
    },
    {
        "id": "535f425f080e8b33",
        "type": "link out",
        "z": "46f45eec56bea94f",
        "name": "link out 35",
        "mode": "return",
        "links": [],
        "x": 275,
        "y": 880,
        "wires": []
    },
    {
        "id": "4d4cce05318a9277",
        "type": "comment",
        "z": "46f45eec56bea94f",
        "name": "query",
        "info": "",
        "x": 180,
        "y": 640,
        "wires": []
    },
    {
        "id": "de99b8f3a2bc0606",
        "type": "debug",
        "z": "46f45eec56bea94f",
        "name": "debug 248",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 180,
        "wires": []
    },
    {
        "id": "c148c88589c16a12",
        "type": "debug",
        "z": "46f45eec56bea94f",
        "name": "debug 257",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 260,
        "wires": []
    },
    {
        "id": "25b8c22eabc3f039",
        "type": "debug",
        "z": "46f45eec56bea94f",
        "name": "debug 260",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "query",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 700,
        "wires": []
    },
    {
        "id": "b5664f5d7b154fa4",
        "type": "debug",
        "z": "46f45eec56bea94f",
        "name": "debug 261",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 760,
        "wires": []
    },
    {
        "id": "9c207febe065e4e9",
        "type": "debug",
        "z": "46f45eec56bea94f",
        "name": "debug 263",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 820,
        "wires": []
    },
    {
        "id": "d1087c11c4da240d",
        "type": "debug",
        "z": "46f45eec56bea94f",
        "name": "debug 264",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 640,
        "wires": []
    },
    {
        "id": "6dc50d5e82b156c6",
        "type": "inject",
        "z": "46f45eec56bea94f",
        "name": "List all",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 100,
        "wires": [
            [
                "eac31c9070a47c6e"
            ]
        ]
    },
    {
        "id": "eac31c9070a47c6e",
        "type": "influxdb in",
        "z": "46f45eec56bea94f",
        "influxdb": "ca2547b7188cdec3",
        "name": "",
        "query": "SELECT * FROM recordings",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 400,
        "y": 100,
        "wires": [
            [
                "aad4a5b83aa4f136"
            ]
        ]
    },
    {
        "id": "aad4a5b83aa4f136",
        "type": "debug",
        "z": "46f45eec56bea94f",
        "name": "debug 267",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 100,
        "wires": []
    },
    {
        "id": "c784a582dab9eb6d",
        "type": "function",
        "z": "46f45eec56bea94f",
        "name": "Payload",
        "func": "var camera = msg.payload;\nmsg.topic = \"recording/\" + camera.serial;\n\nvar start = new Date(msg.chunk.start_time).getTime();\nvar end = new Date(msg.chunk.end_time).getTime();\nvar duration = (end - start) / 1000;\n\nmsg.payload = {\n    name: camera.name,\n    serial: camera.serial,\n    tag: msg.chunk.recording_token || \"Recording\",\n    start: start,\n    end: end,\n    duration: duration,\n    resolution: msg.payload.resolution,\n    url: 'http://' + msg.serverAddress + '/mp4?file=' + msg.chunk.media_filename + '&bucket=' + camera.fmr,\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 340,
        "wires": [
            [
                "0a3a179605021c3d"
            ]
        ]
    },
    {
        "id": "0a3a179605021c3d",
        "type": "mqtt out",
        "z": "46f45eec56bea94f",
        "name": "recording/SERIAL",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "97fd97198befb71e",
        "x": 990,
        "y": 340,
        "wires": []
    },
    {
        "id": "543a9b431793af44",
        "type": "mqtt in",
        "z": "46f45eec56bea94f",
        "name": "",
        "topic": "recording/sd/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "97fd97198befb71e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 440,
        "wires": [
            [
                "ffb0f9b85b0ba3a0",
                "dc660b7f693f7901",
                "1ce727f95c5605f3",
                "5c5faf9f92038944"
            ]
        ]
    },
    {
        "id": "ffb0f9b85b0ba3a0",
        "type": "function",
        "z": "46f45eec56bea94f",
        "name": "Insert",
        "func": "var camera = msg.payload;\n\nmsg.payload = [\n    {\n        start: msg.payload.start,\n        end: msg.payload.end,\n        duration: msg.payload.duration,\n        url: msg.payload.url\n    } , {\n        name: msg.payload.name || camera.serial,\n        serial: msg.payload.serial,\n        tag: msg.payload.tag || \"Recording\",\n        recorder: \"SD\",\n        resolution: msg.payload.resolution,\n        fps: msg.payload.fps\n    }\n]\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 440,
        "wires": [
            [
                "ed51006956a9d250"
            ]
        ]
    },
    {
        "id": "ed51006956a9d250",
        "type": "influxdb out",
        "z": "46f45eec56bea94f",
        "influxdb": "ca2547b7188cdec3",
        "name": "",
        "measurement": "recordings",
        "precision": "ms",
        "retentionPolicy": "autogen",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 740,
        "y": 440,
        "wires": []
    },
    {
        "id": "dc660b7f693f7901",
        "type": "function",
        "z": "46f45eec56bea94f",
        "name": "Insert camers if not in list",
        "func": "var cameras = global.get(\"cameras\") || {};\nif( !msg.payload.hasOwnProperty(\"serial\") ) \n    return;\nif (cameras.hasOwnProperty(\"serial\") )\n    return;\n\nif (cameras.hasOwnProperty(msg.payload.serial))\n    return;\n\ncameras[msg.payload.serial] = {\n    \"name\": msg.payload.name,\n    \"serial\": msg.payload.serial,\n    \"address\": msg.payload.address,\n    \"model\": msg.payload.model,\n    \"SD\": true,\n    \"recorder\": \"SD\",\n    \"resolution\": msg.payload.resolution,\n}\n\nglobal.set(\"cameras\",cameras);\n\nmsg.payload = cameras[msg.payload.serial];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 520,
        "wires": [
            [
                "26a056ec3a0dfb04"
            ]
        ]
    },
    {
        "id": "1421b98b44c33385",
        "type": "function",
        "z": "46f45eec56bea94f",
        "name": "Pretty",
        "func": "msg.payload = JSON.stringify(msg.payload,null,2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 520,
        "wires": [
            [
                "9c23a143550531f7"
            ]
        ]
    },
    {
        "id": "9c23a143550531f7",
        "type": "file",
        "z": "46f45eec56bea94f",
        "name": "",
        "filename": "/data/cameras.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1190,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "26a056ec3a0dfb04",
        "type": "change",
        "z": "46f45eec56bea94f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cameras",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 520,
        "wires": [
            [
                "1421b98b44c33385"
            ]
        ]
    },
    {
        "id": "73c76df5ec4fe947",
        "type": "inject",
        "z": "46f45eec56bea94f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 990,
        "y": 740,
        "wires": [
            [
                "0c26b16465f90438"
            ]
        ]
    },
    {
        "id": "0c26b16465f90438",
        "type": "link call",
        "z": "46f45eec56bea94f",
        "name": "",
        "links": [
            "02e23ece55e93ef0"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1200,
        "y": 740,
        "wires": [
            [
                "b8c9caa967a6fe28"
            ]
        ]
    },
    {
        "id": "b8c9caa967a6fe28",
        "type": "debug",
        "z": "46f45eec56bea94f",
        "name": "debug 289",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 740,
        "wires": []
    },
    {
        "id": "1ce727f95c5605f3",
        "type": "function",
        "z": "46f45eec56bea94f",
        "name": "Payload",
        "func": "msg.topic = \"recording/\" + msg.payload.serial;\n\nmsg.payload = {\n    name: msg.payload.name || msg.payload.serial,\n    serial: msg.payload.serial,\n    tag: msg.payload.tag || \"Recording\",\n    start: msg.payload.start,\n    end: msg.payload.en,\n    duration: msg.payload.duration,\n    resolution: msg.payload.resolution || \"Undefined\",\n    url: msg.payload.url,\n    recorder: \"SD\"\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 480,
        "wires": [
            [
                "4e559e9c858fa208"
            ]
        ]
    },
    {
        "id": "4e559e9c858fa208",
        "type": "mqtt out",
        "z": "46f45eec56bea94f",
        "name": "recording/SERIAL",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "97fd97198befb71e",
        "x": 730,
        "y": 480,
        "wires": []
    },
    {
        "id": "5c5faf9f92038944",
        "type": "debug",
        "z": "46f45eec56bea94f",
        "name": "debug 300",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 380,
        "wires": []
    },
    {
        "id": "e63ebce023a2f994",
        "type": "debug",
        "z": "d5ec438b7021569d",
        "name": "debug 195",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 100,
        "wires": []
    },
    {
        "id": "a37acc5661b49d9d",
        "type": "http in",
        "z": "d5ec438b7021569d",
        "name": "",
        "url": "/mp4",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 40,
        "wires": [
            [
                "4df8abd39c90e046",
                "747d5c287feb5ecd"
            ]
        ]
    },
    {
        "id": "933d6e882724266a",
        "type": "http response",
        "z": "d5ec438b7021569d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1070,
        "y": 200,
        "wires": []
    },
    {
        "id": "4df8abd39c90e046",
        "type": "change",
        "z": "d5ec438b7021569d",
        "g": "8ead32b02e2d7c73",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "objectName",
                "pt": "msg",
                "to": "payload.file",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bucketName",
                "pt": "msg",
                "to": "payload.bucket",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 100,
        "wires": [
            [
                "67e3602f4464f68f",
                "e63ebce023a2f994"
            ]
        ]
    },
    {
        "id": "2de8edc0f8e86efc",
        "type": "function",
        "z": "d5ec438b7021569d",
        "g": "8ead32b02e2d7c73",
        "name": "response",
        "func": "if(msg.payload.getObject === false )\n    return;\n\nmsg.payload = msg.payload.objectData;\nmsg.headers = {};\nmsg.headers[\"Content-Type\"] = \"video/mp4\",\n//msg.headers['Content-Disposition'] = 'attachment; filename=recording.mp4';\nmsg.headers[\"Content-Length\"] = msg.payload.length;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 160,
        "wires": [
            [
                "933d6e882724266a",
                "6efbfbe3dd7c2bbd"
            ]
        ]
    },
    {
        "id": "67e3602f4464f68f",
        "type": "objects",
        "z": "d5ec438b7021569d",
        "g": "8ead32b02e2d7c73",
        "objects_name": "",
        "host": "651bcdc1f2d63e9b",
        "objects_operation": "getObject",
        "objects_bucket": "",
        "objects_object": "",
        "objects_offset": "",
        "objects_length": "",
        "objects_stream": "",
        "objects_size": "",
        "objects_metadata": "",
        "objects_sourceobject": "",
        "objects_conditions": "",
        "objects_objectslist": [],
        "objects_prefix": "",
        "objects_etag": "",
        "objects_datetime": "",
        "x": 650,
        "y": 160,
        "wires": [
            [
                "2de8edc0f8e86efc"
            ],
            [
                "729855eb6c8a32da"
            ]
        ]
    },
    {
        "id": "729855eb6c8a32da",
        "type": "function",
        "z": "d5ec438b7021569d",
        "g": "8ead32b02e2d7c73",
        "name": "Error",
        "func": "if(msg.payload === null)\n    return;\nmsg.statusCode = 500;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 240,
        "wires": [
            [
                "933d6e882724266a",
                "c33979695863a7ab"
            ]
        ]
    },
    {
        "id": "6efbfbe3dd7c2bbd",
        "type": "debug",
        "z": "d5ec438b7021569d",
        "name": "debug 234",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 160,
        "wires": []
    },
    {
        "id": "747d5c287feb5ecd",
        "type": "debug",
        "z": "d5ec438b7021569d",
        "name": "debug 228",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 40,
        "wires": []
    },
    {
        "id": "98ccf247afcae3e9",
        "type": "http in",
        "z": "d5ec438b7021569d",
        "name": "",
        "url": "/list",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 360,
        "wires": [
            [
                "7349c44e8fa91f37",
                "5e3756728e9fbd8e"
            ]
        ]
    },
    {
        "id": "1a8c8d75904c43a2",
        "type": "http response",
        "z": "d5ec438b7021569d",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1350,
        "y": 360,
        "wires": []
    },
    {
        "id": "7349c44e8fa91f37",
        "type": "link call",
        "z": "d5ec438b7021569d",
        "name": "",
        "links": [
            "02e23ece55e93ef0"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 400,
        "y": 360,
        "wires": [
            [
                "c764aa4ee24b991b",
                "fceed8edb30f2d9f",
                "72044ef62e81b874"
            ]
        ]
    },
    {
        "id": "c33979695863a7ab",
        "type": "debug",
        "z": "d5ec438b7021569d",
        "name": "debug 237",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 240,
        "wires": []
    },
    {
        "id": "e6d57c9e17d6c800",
        "type": "catch",
        "z": "d5ec438b7021569d",
        "g": "8ead32b02e2d7c73",
        "name": "",
        "scope": [
            "67e3602f4464f68f"
        ],
        "uncaught": false,
        "x": 430,
        "y": 240,
        "wires": [
            [
                "5bbab81fc5176d34"
            ]
        ]
    },
    {
        "id": "5bbab81fc5176d34",
        "type": "change",
        "z": "d5ec438b7021569d",
        "g": "8ead32b02e2d7c73",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "error.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 240,
        "wires": [
            [
                "729855eb6c8a32da"
            ]
        ]
    },
    {
        "id": "53acae182cddafd0",
        "type": "http in",
        "z": "d5ec438b7021569d",
        "name": "",
        "url": "/record/start",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 620,
        "wires": [
            [
                "c3423179e25b25e9",
                "4ed3a17e36fd3c0d"
            ]
        ],
        "info": "{\r\n    serial: \"1A2B3C4D5E6F\",\r\n    timestamp: EPOCH,\r\n    state: bool,\r\n    tag: \"Some string\"\r\n}"
    },
    {
        "id": "c3423179e25b25e9",
        "type": "function",
        "z": "d5ec438b7021569d",
        "g": "8da94ea605c8d5d2",
        "name": "Validate",
        "func": "if( !msg.payload.hasOwnProperty(\"serial\") ) {\n    msg.payload = \"Start recording failed.  Missing serial\",\n    msg.statusCode = 400;\n    node.send([msg, null]);\n    return;\n}\n\nnode.send([null,msg]);\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 680,
        "wires": [
            [
                "25df46ca51e1d3a6",
                "6aaf32bbd5db43ef",
                "a30c56daa0836d74"
            ],
            [
                "57cf37efcb2a282d"
            ]
        ]
    },
    {
        "id": "25df46ca51e1d3a6",
        "type": "http response",
        "z": "d5ec438b7021569d",
        "g": "8da94ea605c8d5d2",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 680,
        "y": 720,
        "wires": []
    },
    {
        "id": "57cf37efcb2a282d",
        "type": "change",
        "z": "d5ec438b7021569d",
        "g": "8da94ea605c8d5d2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "request",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 780,
        "wires": [
            [
                "d2e8ca621587342b"
            ]
        ]
    },
    {
        "id": "c9a57b8f6c6419d2",
        "type": "switch",
        "z": "d5ec438b7021569d",
        "g": "8da94ea605c8d5d2",
        "name": "Not fount",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 940,
        "y": 820,
        "wires": [
            [
                "f05241a3bd89cc2c"
            ]
        ]
    },
    {
        "id": "9903b1d55a033ef5",
        "type": "switch",
        "z": "d5ec438b7021569d",
        "g": "8da94ea605c8d5d2",
        "name": "Found",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 980,
        "wires": [
            [
                "d06f8fbc2e54e335"
            ]
        ]
    },
    {
        "id": "4fbde9f0d1bdfd4e",
        "type": "http response",
        "z": "d5ec438b7021569d",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 1360,
        "y": 860,
        "wires": []
    },
    {
        "id": "4a4224e517d8ee0c",
        "type": "mqtt out",
        "z": "d5ec438b7021569d",
        "name": "recorder/+/command/recorder/activate_rec",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "97fd97198befb71e",
        "x": 1470,
        "y": 1060,
        "wires": []
    },
    {
        "id": "a112eb348146784a",
        "type": "http response",
        "z": "d5ec438b7021569d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1350,
        "y": 1020,
        "wires": []
    },
    {
        "id": "d2e8ca621587342b",
        "type": "function",
        "z": "d5ec438b7021569d",
        "g": "8da94ea605c8d5d2",
        "name": "Get Camera By Serial",
        "func": "var cameras = global.get(\"cameras\");\nif(!cameras) {\n    node.warn(\"No cameras\");\n    msg.payload = null;\n    return msg;\n}\n\nif( !cameras.hasOwnProperty(msg.payload.serial) ) {\n    node.warn(\"Camera \" + msg.payload.serial + \" not found\");\n    msg.payload = null;\n    return msg;\n    return;\n}\n\nmsg.payload = cameras[msg.payload.serial];\n\nif( msg.payload.active === false ) {\n    node.warn(\"Camera \" + msg.payload.name + \" is not active\")\n    msg.payload = null;\n    return msg;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 780,
        "wires": [
            [
                "c9a57b8f6c6419d2",
                "9903b1d55a033ef5",
                "d695e4768f514ad9"
            ]
        ]
    },
    {
        "id": "d06f8fbc2e54e335",
        "type": "function",
        "z": "d5ec438b7021569d",
        "g": "8da94ea605c8d5d2",
        "name": "FMR request",
        "func": "var camera = msg.payload;\n\nvar recordings = flow.get(\"recordings\") || {};\n\nvar recording = {\n    counter: 0\n}\nif( recordings.hasOwnProperty(msg.payload.serial ) )\n    recording = recordings[msg.payload.serial];\nrecording.counter++;\nflow.set(\"recordings\",recordings);\n\nmsg.topic = \"recorder/\" + camera.fmr + \"/command/recorder/activate_rec\"\n\nmsg.payload = {\n    active: true,\n    recording_token: msg.request.tag || \"Recording\",\n}\n\nif( msg.request.hasOwnProperty(\"timestamp\"))\n    msg.payload.trigger_time = new Date(msg.event.request).toISOString()\n\n\nif (msg.request.hasOwnProperty(\"buffer\") )\n    msg.payload.prebuffer = msg.payload.buffer || camera.buffer;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 980,
        "wires": [
            [
                "a112eb348146784a",
                "4a4224e517d8ee0c",
                "c79632ada0a50b71"
            ]
        ]
    },
    {
        "id": "8ecff997f05e522a",
        "type": "http in",
        "z": "d5ec438b7021569d",
        "name": "",
        "url": "/record/stop",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 1440,
        "wires": [
            [
                "35f878545ceddcd9",
                "799cd459e45e8ec1"
            ]
        ],
        "info": "{\r\n    serial: \"1A2B3C4D5E6F\",\r\n    timestamp: EPOCH,\r\n    state: bool,\r\n    tag: \"Some string\"\r\n}"
    },
    {
        "id": "35f878545ceddcd9",
        "type": "function",
        "z": "d5ec438b7021569d",
        "g": "89a58f3caee2f48d",
        "name": "Validate",
        "func": "if( !msg.payload.hasOwnProperty(\"serial\") ) {\n    msg.payload = \"Stop recording failed.  Missing serial number\",\n    msg.statusCode = 400;\n    node.send([msg, null]);\n    return;\n}\n\nnode.send([null,msg]);\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1520,
        "wires": [
            [
                "2a77615d8fb3ee44"
            ],
            [
                "b9ebeadf01ddee55"
            ]
        ]
    },
    {
        "id": "924f53885fdb82b0",
        "type": "http response",
        "z": "d5ec438b7021569d",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 1160,
        "y": 1520,
        "wires": []
    },
    {
        "id": "b9ebeadf01ddee55",
        "type": "change",
        "z": "d5ec438b7021569d",
        "g": "89a58f3caee2f48d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "request",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 1660,
        "wires": [
            [
                "1cd5bce5f8cb1686"
            ]
        ]
    },
    {
        "id": "12061cabdb3ed28d",
        "type": "mqtt out",
        "z": "d5ec438b7021569d",
        "name": "recorder/+/command/recorder/activate_rec",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "97fd97198befb71e",
        "x": 1270,
        "y": 1720,
        "wires": []
    },
    {
        "id": "631439502d060137",
        "type": "http response",
        "z": "d5ec438b7021569d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1150,
        "y": 1680,
        "wires": []
    },
    {
        "id": "1cd5bce5f8cb1686",
        "type": "function",
        "z": "d5ec438b7021569d",
        "g": "89a58f3caee2f48d",
        "name": "Get Camera By Serial",
        "func": "var cameras = global.get(\"cameras\");\nif(!cameras) {\n    node.warn(\"No cameras\");\n    msg.payload = null;\n    return msg;\n}\n\nif( !cameras.hasOwnProperty(msg.payload.serial) ) {\n    node.warn(\"Camera \" + msg.payload.serial + \" not found\");\n    msg.payload = null;\n    return msg;\n    return;\n}\n\nmsg.payload = cameras[msg.payload.serial];\n\nif( msg.payload.active === false ) {\n    node.warn(\"Camera \" + msg.payload.name + \" is not active\")\n    msg.payload = null;\n    return msg;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1660,
        "wires": [
            [
                "ebbbd15e17f38520",
                "21a27ea6f3da4f5f"
            ]
        ]
    },
    {
        "id": "ebbbd15e17f38520",
        "type": "function",
        "z": "d5ec438b7021569d",
        "g": "89a58f3caee2f48d",
        "name": "FMR request",
        "func": "var camera = msg.payload;\n\nmsg.topic = \"recorder/\" + camera.fmr + \"/command/recorder/activate_rec\"\n\nvar recordings = flow.get(\"recordings\");\n\nif( !recordings ) {\n    msg.payload = {\n        active: false,\n        recording_token: msg.request.tag || \"Recording\",\n    }\n    if (msg.request.hasOwnProperty(\"buffer\") )\n        msg.payload.postbuffer = msg.payload.buffer || camera.buffer;\n\n    return msg;\n}\n\nif (!recordings.hasOwnProperty(msg.payload.serial)) {\n    msg.payload = {\n        active: false,\n        recording_token: msg.request.tag || \"Recording\",\n    }\n    if (msg.request.hasOwnProperty(\"buffer\") )\n        msg.payload.postbuffer = msg.payload.buffer || camera.buffer;\n    return msg;\n}\n\nvar recording = recordings[msg.payload.serial];\nrecording.counter--;\nif (recording.counter < 0 )\n    recording.counter = 0;\nflow.set(\"recordings\",recordings);\n\nif( recording.counters === 0 ) {\n    msg.payload = {\n        active: false,\n        recording_token: msg.request.tag || \"Recording\",\n    }\n    if (msg.request.hasOwnProperty(\"buffer\") )\n        msg.payload.postbuffer = msg.request.buffer || camera.buffer;\n    if (msg.request.hasOwnProperty(\"buffer\") )\n        msg.payload.postbuffer = msg.payload.buffer || camera.buffer;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1720,
        "wires": [
            [
                "546a699f0eb3afc3"
            ]
        ]
    },
    {
        "id": "6aaf32bbd5db43ef",
        "type": "mqtt out",
        "z": "d5ec438b7021569d",
        "g": "8da94ea605c8d5d2",
        "name": "",
        "topic": "exception/recording",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "97fd97198befb71e",
        "x": 890,
        "y": 700,
        "wires": []
    },
    {
        "id": "f05241a3bd89cc2c",
        "type": "function",
        "z": "d5ec438b7021569d",
        "g": "8da94ea605c8d5d2",
        "name": "Message",
        "func": "msg.payload = \"Recording start failed.  Invalid device serial number \" + msg.request.serial;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 820,
        "wires": [
            [
                "4fbde9f0d1bdfd4e",
                "45288eae5ded7d0c",
                "89d386af2ebddd89"
            ]
        ]
    },
    {
        "id": "45288eae5ded7d0c",
        "type": "mqtt out",
        "z": "d5ec438b7021569d",
        "name": "",
        "topic": "exception/recording",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "97fd97198befb71e",
        "x": 1400,
        "y": 900,
        "wires": []
    },
    {
        "id": "8ac95b80b9661dc6",
        "type": "mqtt out",
        "z": "d5ec438b7021569d",
        "name": "",
        "topic": "exception/recording",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "97fd97198befb71e",
        "x": 1200,
        "y": 1560,
        "wires": []
    },
    {
        "id": "285f7390e87e0d7d",
        "type": "function",
        "z": "d5ec438b7021569d",
        "g": "8da94ea605c8d5d2",
        "name": "Validate",
        "func": "if( !msg.payload.hasOwnProperty(\"serial\") ) {\n    msg.payload = \"Start recording failed.  Missing serial\",\n    msg.statusCode = 400;\n    node.send([msg, null]);\n}\n\nnode.send([null,msg]);\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1140,
        "wires": [
            [
                "98791ca9ef71c824"
            ],
            [
                "99daca933a43710e"
            ]
        ]
    },
    {
        "id": "99daca933a43710e",
        "type": "change",
        "z": "d5ec438b7021569d",
        "g": "8da94ea605c8d5d2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "request",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 1180,
        "wires": [
            [
                "24075df70779e52a"
            ]
        ]
    },
    {
        "id": "ab3da743a8f6d0a0",
        "type": "switch",
        "z": "d5ec438b7021569d",
        "g": "8da94ea605c8d5d2",
        "name": "Not fount",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 900,
        "y": 1220,
        "wires": [
            [
                "b46faa264e7591ee"
            ]
        ]
    },
    {
        "id": "afb4e2f05dce25f1",
        "type": "switch",
        "z": "d5ec438b7021569d",
        "g": "8da94ea605c8d5d2",
        "name": "Found",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 890,
        "y": 1260,
        "wires": [
            [
                "e788bfb14ce3e141"
            ]
        ]
    },
    {
        "id": "582416ccef4245bd",
        "type": "mqtt out",
        "z": "d5ec438b7021569d",
        "name": "recorder/+/command/recorder/activate_rec",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "97fd97198befb71e",
        "x": 1470,
        "y": 1260,
        "wires": []
    },
    {
        "id": "24075df70779e52a",
        "type": "function",
        "z": "d5ec438b7021569d",
        "g": "8da94ea605c8d5d2",
        "name": "Get Camera By Serial",
        "func": "var cameras = global.get(\"cameras\");\nif(!cameras) {\n    node.warn(\"No cameras\");\n    msg.payload = null;\n    return msg;\n}\n\nif( !cameras.hasOwnProperty(msg.payload.serial) ) {\n    node.warn(\"Camera \" + msg.payload.serial + \" not found\");\n    msg.payload = null;\n    return msg;\n    return;\n}\n\nmsg.payload = cameras[msg.payload.serial];\n\nif( msg.payload.active === false ) {\n    node.warn(\"Camera \" + msg.payload.name + \" is not active\")\n    msg.payload = null;\n    return msg;\n}\n\nif (msg.payload.status !== \"ready\") {\n    node.warn(\"Camera \" + msg.payload.name + \" is not available\")\n    msg.payload = null;\n    return msg;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1180,
        "wires": [
            [
                "ab3da743a8f6d0a0",
                "afb4e2f05dce25f1",
                "aadd3ff66ff7124a"
            ]
        ]
    },
    {
        "id": "e788bfb14ce3e141",
        "type": "function",
        "z": "d5ec438b7021569d",
        "g": "8da94ea605c8d5d2",
        "name": "FMR request",
        "func": "var camera = msg.payload;\n\nvar recordings = flow.get(\"recordings\") || {};\n\nvar recording = {\n    counter: 0\n}\nif( recordings.hasOwnProperty(msg.payload.serial ) )\n    recording = recordings[msg.payload.serial];\nrecording.counter++;\nflow.set(\"recordings\",recordings);\n\nmsg.topic = \"recorder/\" + camera.fmr + \"/command/recorder/activate_rec\"\n\nmsg.payload = {\n    active: true,\n    recording_token: msg.request.tag || \"Recording\",\n}\n\nif( msg.request.hasOwnProperty(\"timestamp\"))\n    msg.payload.trigger_time = new Date(msg.event.request).toISOString()\n\n\nif (msg.request.hasOwnProperty(\"buffer\") )\n    msg.payload.prebuffer = msg.payload.buffer || camera.buffer;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1260,
        "wires": [
            [
                "582416ccef4245bd"
            ]
        ]
    },
    {
        "id": "98791ca9ef71c824",
        "type": "mqtt out",
        "z": "d5ec438b7021569d",
        "name": "",
        "topic": "exception/recording",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "97fd97198befb71e",
        "x": 1400,
        "y": 1140,
        "wires": []
    },
    {
        "id": "b46faa264e7591ee",
        "type": "function",
        "z": "d5ec438b7021569d",
        "g": "8da94ea605c8d5d2",
        "name": "Message",
        "func": "msg.payload = \"Recording start failed.  Invalid device serial number \" + msg.request.serial;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1220,
        "wires": [
            [
                "6b0750ffad672a43"
            ]
        ]
    },
    {
        "id": "6b0750ffad672a43",
        "type": "mqtt out",
        "z": "d5ec438b7021569d",
        "name": "",
        "topic": "exception/recording",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "97fd97198befb71e",
        "x": 1400,
        "y": 1220,
        "wires": []
    },
    {
        "id": "96bfd34ab0d79f49",
        "type": "mqtt in",
        "z": "d5ec438b7021569d",
        "name": "",
        "topic": "record/start",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "97fd97198befb71e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "285f7390e87e0d7d"
            ]
        ]
    },
    {
        "id": "1a7095b61ae118e9",
        "type": "function",
        "z": "d5ec438b7021569d",
        "g": "89a58f3caee2f48d",
        "name": "Validate",
        "func": "if( !msg.payload.hasOwnProperty(\"serial\") ) {\n    msg.payload = \"Stop recording failed.  Missing serial number\",\n    msg.statusCode = 400;\n    node.send([msg, null]);\n}\n\nnode.send([null,msg]);\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1820,
        "wires": [
            [
                "98021178fc48daa2"
            ],
            [
                "e0bc51777556a866"
            ]
        ]
    },
    {
        "id": "e0bc51777556a866",
        "type": "change",
        "z": "d5ec438b7021569d",
        "g": "89a58f3caee2f48d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "request",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 1900,
        "wires": [
            [
                "54d040ce0124a8c9"
            ]
        ]
    },
    {
        "id": "531c54ba8eab1e40",
        "type": "mqtt out",
        "z": "d5ec438b7021569d",
        "name": "",
        "topic": "exception/recording",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "97fd97198befb71e",
        "x": 1200,
        "y": 1840,
        "wires": []
    },
    {
        "id": "54d040ce0124a8c9",
        "type": "function",
        "z": "d5ec438b7021569d",
        "g": "89a58f3caee2f48d",
        "name": "Get Camera By Serial",
        "func": "var cameras = global.get(\"cameras\");\nif(!cameras) {\n    node.warn(\"No cameras\");\n    msg.payload = null;\n    return msg;\n}\n\nif( !cameras.hasOwnProperty(msg.payload.serial) ) {\n    node.warn(\"Camera \" + msg.payload.serial + \" not found\");\n    msg.payload = null;\n    return msg;\n    return;\n}\n\nmsg.payload = cameras[msg.payload.serial];\n\nif( msg.payload.active === false ) {\n    node.warn(\"Camera \" + msg.payload.name + \" is not active\")\n    msg.payload = null;\n    return msg;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1900,
        "wires": [
            [
                "c5f6c796290c9063"
            ]
        ]
    },
    {
        "id": "c5f6c796290c9063",
        "type": "function",
        "z": "d5ec438b7021569d",
        "g": "89a58f3caee2f48d",
        "name": "FMR request",
        "func": "var camera = msg.payload;\n\nmsg.topic = \"recorder/\" + camera.fmr + \"/command/recorder/activate_rec\"\n\nvar recordings = flow.get(\"recordings\");\n\nif( !recordings ) {\n    msg.payload = {\n        active: false,\n        recording_token: msg.request.tag || \"Recording\",\n    }\n    return msg;\n}\n\nif (!recordings.hasOwnProperty(msg.payload.serial)) {\n    msg.payload = {\n        active: false,\n        recording_token: msg.request.tag || \"Recording\",\n    }\n    return msg;\n}\n\nvar recording = recordings[msg.payload.serial];\nrecording.counter--;\nif (recording.counter < 0 )\n    recording.counter = 0;\nflow.set(\"recordings\",recordings);\n\nif( recording.counters === 0 ) {\n    msg.payload = {\n        active: false,\n        recording_token: msg.request.tag || \"Recording\",\n    }\n    if (msg.request.hasOwnProperty(\"buffer\") )\n        msg.payload.postbuffer = msg.request.buffer || camera.buffer;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 1900,
        "wires": [
            [
                "c01494dc62de7eb5"
            ]
        ]
    },
    {
        "id": "48ac631377e528df",
        "type": "mqtt out",
        "z": "d5ec438b7021569d",
        "name": "recorder/+/command/recorder/activate_rec",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "97fd97198befb71e",
        "x": 1270,
        "y": 1920,
        "wires": []
    },
    {
        "id": "e34d6953d55480db",
        "type": "mqtt in",
        "z": "d5ec438b7021569d",
        "name": "",
        "topic": "record/stop",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "97fd97198befb71e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 1840,
        "wires": [
            [
                "1a7095b61ae118e9"
            ]
        ]
    },
    {
        "id": "4ed3a17e36fd3c0d",
        "type": "debug",
        "z": "d5ec438b7021569d",
        "name": "debug 275",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 620,
        "wires": []
    },
    {
        "id": "a30c56daa0836d74",
        "type": "debug",
        "z": "d5ec438b7021569d",
        "name": "debug 276",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 680,
        "wires": []
    },
    {
        "id": "d695e4768f514ad9",
        "type": "debug",
        "z": "d5ec438b7021569d",
        "name": "debug 278",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 780,
        "wires": []
    },
    {
        "id": "89d386af2ebddd89",
        "type": "debug",
        "z": "d5ec438b7021569d",
        "name": "debug 279",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 820,
        "wires": []
    },
    {
        "id": "c79632ada0a50b71",
        "type": "debug",
        "z": "d5ec438b7021569d",
        "name": "debug 280",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 980,
        "wires": []
    },
    {
        "id": "aadd3ff66ff7124a",
        "type": "debug",
        "z": "d5ec438b7021569d",
        "name": "debug 281",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 1180,
        "wires": []
    },
    {
        "id": "76e2d1b82ea8c525",
        "type": "debug",
        "z": "d5ec438b7021569d",
        "name": "debug 282",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 1600,
        "wires": []
    },
    {
        "id": "1a9233719e0c32bb",
        "type": "debug",
        "z": "d5ec438b7021569d",
        "name": "debug 283",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 1760,
        "wires": []
    },
    {
        "id": "799cd459e45e8ec1",
        "type": "debug",
        "z": "d5ec438b7021569d",
        "name": "debug 284",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 1440,
        "wires": []
    },
    {
        "id": "d237cd6420d02271",
        "type": "debug",
        "z": "d5ec438b7021569d",
        "name": "debug 285",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 1880,
        "wires": []
    },
    {
        "id": "ec12d0d2005780b5",
        "type": "debug",
        "z": "d5ec438b7021569d",
        "name": "debug 286",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 1960,
        "wires": []
    },
    {
        "id": "c01f33ca9942d00a",
        "type": "mqtt in",
        "z": "d5ec438b7021569d",
        "name": "",
        "topic": "recorder/+/event/recorder/rec_started",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "97fd97198befb71e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 500,
        "wires": [
            [
                "3063904110a79b2b",
                "94964e13c8c83c7a"
            ]
        ]
    },
    {
        "id": "74737e30e579ddbb",
        "type": "mqtt in",
        "z": "d5ec438b7021569d",
        "name": "",
        "topic": "recorder/+/event/recorder/rec_stopping",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "97fd97198befb71e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 540,
        "wires": [
            [
                "e0c29e2f13bae4ed",
                "94964e13c8c83c7a"
            ]
        ]
    },
    {
        "id": "c764aa4ee24b991b",
        "type": "split",
        "z": "d5ec438b7021569d",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 590,
        "y": 400,
        "wires": [
            [
                "65108d8e96dc5db7"
            ]
        ]
    },
    {
        "id": "9fea5fd9235d474b",
        "type": "join",
        "z": "d5ec438b7021569d",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1010,
        "y": 400,
        "wires": [
            [
                "b4731e3b69dbeaa8"
            ]
        ]
    },
    {
        "id": "65108d8e96dc5db7",
        "type": "moment",
        "z": "d5ec438b7021569d",
        "name": "",
        "topic": "",
        "input": "payload.start",
        "inputType": "msg",
        "inTz": "Europe/Stockholm",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "ddd MMM D HH:mm:ss",
        "locale": "en-US",
        "output": "payload.time",
        "outputType": "msg",
        "outTz": "Europe/Stockholm",
        "x": 780,
        "y": 400,
        "wires": [
            [
                "9fea5fd9235d474b"
            ]
        ]
    },
    {
        "id": "b4731e3b69dbeaa8",
        "type": "sort",
        "z": "d5ec438b7021569d",
        "name": "",
        "order": "descending",
        "as_num": true,
        "target": "payload",
        "targetType": "msg",
        "msgKey": "start",
        "msgKeyType": "jsonata",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 1150,
        "y": 400,
        "wires": [
            [
                "1a8c8d75904c43a2",
                "1ff330caf1753249"
            ]
        ]
    },
    {
        "id": "3063904110a79b2b",
        "type": "function",
        "z": "d5ec438b7021569d",
        "name": "Get Camera by FMR",
        "func": "msg.tag = msg.payload.recording_token;\nvar fmrID = msg.topic.split('/')[1];\n\nvar cameras = global.get(\"cameras\");\nmsg.payload = false;\nfor(var serial in cameras) {\n    if( cameras[serial].fmr === fmrID )\n        msg.payload = cameras[serial];\n}\n\nif( !msg.payload )\n    return;\n\nif( msg.payload.active === false)\n    return;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 500,
        "wires": [
            [
                "94a577c77858134e"
            ]
        ]
    },
    {
        "id": "e0c29e2f13bae4ed",
        "type": "function",
        "z": "d5ec438b7021569d",
        "name": "Get Camera by FMR",
        "func": "msg.tag = msg.payload.recording_token;\nvar fmrID = msg.topic.split('/')[1];\n\nvar cameras = global.get(\"cameras\");\nmsg.payload = false;\nfor(var serial in cameras) {\n    if( cameras[serial].fmr === fmrID )\n        msg.payload = cameras[serial];\n}\n\nif( !msg.payload )\n    return;\n\nif( msg.payload.active === false)\n    return;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 540,
        "wires": [
            [
                "33be01cc686a0fda"
            ]
        ]
    },
    {
        "id": "94a577c77858134e",
        "type": "function",
        "z": "d5ec438b7021569d",
        "name": "recorder/starting/SERIAL",
        "func": "msg.topic = \"recorder/starting/\" + msg.payload.serial;\nmsg.payload = {\n    timestamp: new Date().getTime(),\n    serial: msg.payload.serial,\n    fmr: msg.payload.fmr,\n    tag: msg.tag\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 500,
        "wires": [
            [
                "de54328bbbf94109"
            ]
        ]
    },
    {
        "id": "de54328bbbf94109",
        "type": "mqtt out",
        "z": "d5ec438b7021569d",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "97fd97198befb71e",
        "x": 1090,
        "y": 500,
        "wires": []
    },
    {
        "id": "33be01cc686a0fda",
        "type": "function",
        "z": "d5ec438b7021569d",
        "name": "recorder/stopped/SERIAL",
        "func": "msg.topic = \"recorder/stopped/\" + msg.payload.serial;\nmsg.payload = {\n    timestamp: new Date().getTime(),\n    serial: msg.payload.serial,\n    fmr: msg.payload.fmr,\n    tag: msg.tag\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 540,
        "wires": [
            [
                "de54328bbbf94109"
            ]
        ]
    },
    {
        "id": "5e3756728e9fbd8e",
        "type": "debug",
        "z": "d5ec438b7021569d",
        "name": "debug 294",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 320,
        "wires": []
    },
    {
        "id": "fceed8edb30f2d9f",
        "type": "debug",
        "z": "d5ec438b7021569d",
        "name": "debug 295",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 320,
        "wires": []
    },
    {
        "id": "1ff330caf1753249",
        "type": "debug",
        "z": "d5ec438b7021569d",
        "name": "debug 296",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 400,
        "wires": []
    },
    {
        "id": "72044ef62e81b874",
        "type": "switch",
        "z": "d5ec438b7021569d",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 360,
        "wires": [
            [
                "723b9043b9a6b705"
            ]
        ]
    },
    {
        "id": "723b9043b9a6b705",
        "type": "change",
        "z": "d5ec438b7021569d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 360,
        "wires": [
            [
                "1a8c8d75904c43a2"
            ]
        ]
    },
    {
        "id": "94964e13c8c83c7a",
        "type": "debug",
        "z": "d5ec438b7021569d",
        "name": "debug 298",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 460,
        "wires": []
    },
    {
        "id": "21a27ea6f3da4f5f",
        "type": "debug",
        "z": "d5ec438b7021569d",
        "name": "debug 299",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 1640,
        "wires": []
    },
    {
        "id": "036b4a5c7d7ad9b1",
        "type": "Camera Station",
        "z": "26ed8a12ce112e81",
        "g": "f016075ba057df3b",
        "name": "",
        "server": "fafbed826f0a0088",
        "action": "Inventory",
        "x": 400,
        "y": 740,
        "wires": [
            [
                "c42f6dbfbe94d7ca"
            ]
        ]
    },
    {
        "id": "c42f6dbfbe94d7ca",
        "type": "split",
        "z": "26ed8a12ce112e81",
        "g": "f016075ba057df3b",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 590,
        "y": 740,
        "wires": [
            [
                "48dbdd64e4622981"
            ]
        ]
    },
    {
        "id": "48dbdd64e4622981",
        "type": "function",
        "z": "26ed8a12ce112e81",
        "g": "f016075ba057df3b",
        "name": "global.cameras",
        "func": "var cameras = global.get(\"cameras\") || {};\nvar camera = {};\nif( !cameras.hasOwnProperty(msg.payload.serial)) {\n    camera = {\n        name: msg.payload.name,\n        serial: msg.payload.serial,\n        address: msg.payload.address,\n        model: msg.payload.model,\n        buffer: 5,\n        acs: msg.payload.id,\n        fmr: null,\n        active: true\n    }\n} else {\n    camera = cameras[msg.payload.serial];\n    camera.address = msg.payload.address;\n    camera.acs = msg.payload.id;\n}\n\ncameras[camera.serial] = camera;\nglobal.set(\"cameras\",cameras);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 740,
        "wires": [
            [
                "026703afda827fbc"
            ]
        ]
    },
    {
        "id": "07fe5cd686ac7ea1",
        "type": "change",
        "z": "26ed8a12ce112e81",
        "g": "f016075ba057df3b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "address",
                "pt": "msg",
                "to": "10.13.8.120",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "user",
                "pt": "msg",
                "to": "ACS_USER",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "password",
                "pt": "msg",
                "to": "ACS_PASSWORD",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 680,
        "wires": [
            [
                "aac89c8a27b84eca"
            ]
        ]
    },
    {
        "id": "026703afda827fbc",
        "type": "join",
        "z": "26ed8a12ce112e81",
        "g": "f016075ba057df3b",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 950,
        "y": 740,
        "wires": [
            [
                "70fdd482a971e7e0"
            ]
        ]
    },
    {
        "id": "0433c4b6aac855b2",
        "type": "file",
        "z": "26ed8a12ce112e81",
        "g": "f016075ba057df3b",
        "name": "",
        "filename": "/data/cameras.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 990,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "70fdd482a971e7e0",
        "type": "change",
        "z": "26ed8a12ce112e81",
        "g": "f016075ba057df3b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cameras",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 800,
        "wires": [
            [
                "bad27c6d0a0ef447"
            ]
        ]
    },
    {
        "id": "aac89c8a27b84eca",
        "type": "function",
        "z": "26ed8a12ce112e81",
        "g": "f016075ba057df3b",
        "name": "Environment varibles set?",
        "func": "if( !msg.address || msg.address.length < 5)\n    return;\nif (!msg.user || msg.user.length < 2)\n    return;\nif (!msg.password || msg.password.length < 2)\n    return;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "036b4a5c7d7ad9b1"
            ]
        ]
    },
    {
        "id": "bad27c6d0a0ef447",
        "type": "function",
        "z": "26ed8a12ce112e81",
        "g": "f016075ba057df3b",
        "name": "Pretty",
        "func": "msg.payload = JSON.stringify(msg.payload,null,2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 800,
        "wires": [
            [
                "0433c4b6aac855b2"
            ]
        ]
    },
    {
        "id": "391451537d1f279a",
        "type": "file in",
        "z": "26ed8a12ce112e81",
        "g": "f016075ba057df3b",
        "name": "",
        "filename": "/data/cameras.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 370,
        "y": 620,
        "wires": [
            [
                "5687cb0fd5c3bf18"
            ]
        ]
    },
    {
        "id": "5687cb0fd5c3bf18",
        "type": "json",
        "z": "26ed8a12ce112e81",
        "g": "f016075ba057df3b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 610,
        "y": 620,
        "wires": [
            [
                "4e3d3173d076b5fb"
            ]
        ]
    },
    {
        "id": "4e3d3173d076b5fb",
        "type": "change",
        "z": "26ed8a12ce112e81",
        "g": "f016075ba057df3b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "cameras",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "4591357985e45c29",
        "type": "catch",
        "z": "26ed8a12ce112e81",
        "g": "f016075ba057df3b",
        "name": "",
        "scope": [
            "391451537d1f279a"
        ],
        "uncaught": false,
        "x": 330,
        "y": 580,
        "wires": [
            [
                "cd656acd3a5a5530"
            ]
        ]
    },
    {
        "id": "cd656acd3a5a5530",
        "type": "change",
        "z": "26ed8a12ce112e81",
        "g": "f016075ba057df3b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 580,
        "wires": [
            [
                "30fefe770d302b6d",
                "4e3d3173d076b5fb"
            ]
        ]
    },
    {
        "id": "30fefe770d302b6d",
        "type": "file",
        "z": "26ed8a12ce112e81",
        "g": "f016075ba057df3b",
        "name": "",
        "filename": "/data/cameras.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 790,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "31819d8665da212f",
        "type": "link in",
        "z": "26ed8a12ce112e81",
        "name": "Refresh",
        "links": [
            "4034a60f2622a799",
            "f899f7944ab5b501",
            "4acb91d85fb1469a"
        ],
        "x": 185,
        "y": 1020,
        "wires": [
            [
                "29b2d943afaae901"
            ]
        ]
    },
    {
        "id": "b5024faded6595be",
        "type": "inject",
        "z": "26ed8a12ce112e81",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 940,
        "wires": [
            [
                "cee7f705606ed449"
            ]
        ]
    },
    {
        "id": "b3d0c92c292bb897",
        "type": "mqtt in",
        "z": "26ed8a12ce112e81",
        "g": "4024b3d5b06eaa70",
        "name": "",
        "topic": "recorder/+/event/recorder/status",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "97fd97198befb71e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 410,
        "y": 120,
        "wires": [
            [
                "d82c77bd7e6f636d",
                "b7afe69b4331fda0",
                "722a64131ff85381"
            ]
        ]
    },
    {
        "id": "d82c77bd7e6f636d",
        "type": "function",
        "z": "26ed8a12ce112e81",
        "g": "4024b3d5b06eaa70",
        "name": "Insert",
        "func": "msg.payload.serial = msg.topic.split('/')[1];\n\nmsg.payload = [\n    {\n        status: msg.payload.status\n    },\n    {\n        fmrID: msg.topic.split('/')[1]\n    }\n]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 120,
        "wires": [
            [
                "1111bfab18741258",
                "0ba2669a3f524803"
            ]
        ]
    },
    {
        "id": "1111bfab18741258",
        "type": "influxdb out",
        "z": "26ed8a12ce112e81",
        "g": "4024b3d5b06eaa70",
        "influxdb": "ca2547b7188cdec3",
        "name": "",
        "measurement": "fmr_status",
        "precision": "ms",
        "retentionPolicy": "week",
        "database": "log",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 940,
        "y": 120,
        "wires": []
    },
    {
        "id": "0ba2669a3f524803",
        "type": "debug",
        "z": "26ed8a12ce112e81",
        "name": "debug 225",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 120,
        "wires": []
    },
    {
        "id": "4034a60f2622a799",
        "type": "link out",
        "z": "26ed8a12ce112e81",
        "name": "link out 34",
        "mode": "link",
        "links": [
            "31819d8665da212f"
        ],
        "x": 1235,
        "y": 1300,
        "wires": []
    },
    {
        "id": "cee7f705606ed449",
        "type": "ui_button",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "name": "",
        "group": "78eb60079705b811",
        "order": 1,
        "width": "3",
        "height": "1",
        "passthru": true,
        "label": "refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 340,
        "y": 940,
        "wires": [
            [
                "29b2d943afaae901",
                "fff6949c6b0b0cf3"
            ]
        ]
    },
    {
        "id": "b72607fb480b715c",
        "type": "ui_table",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "group": "78eb60079705b811",
        "name": "",
        "order": 3,
        "width": "13",
        "height": "7",
        "columns": [
            {
                "field": "link",
                "title": "Name",
                "width": "",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "model",
                "title": "Model",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "resolution",
                "title": "Resolution",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "buffer",
                "title": "Buffer",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "active",
                "title": "Active",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "status",
                "title": "Status",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 850,
        "y": 1000,
        "wires": [
            [
                "b9838eeea99b35b3"
            ]
        ]
    },
    {
        "id": "b9838eeea99b35b3",
        "type": "change",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "selected",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 1000,
        "wires": [
            [
                "32ce32d6ed6b7b62"
            ]
        ]
    },
    {
        "id": "62acb83a893d38e4",
        "type": "ui_button",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "name": "",
        "group": "6542dda0146a98e2",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Remove",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 340,
        "y": 1360,
        "wires": [
            [
                "491261edf4153908"
            ]
        ]
    },
    {
        "id": "491261edf4153908",
        "type": "function",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "name": "remove",
        "func": "var cameras = global.get(\"cameras\");\ndelete cameras[flow.get(\"selected\").serial];\nglobal.set(\"cameras\",cameras);\nmsg.payload = cameras;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1360,
        "wires": [
            [
                "c3a8eb0cdd03e8aa"
            ]
        ]
    },
    {
        "id": "29b2d943afaae901",
        "type": "function",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "name": "List",
        "func": "var cameras = global.get(\"cameras\") || {};\nvar list = [];\nfor( var serial in cameras) {\n    cameras[serial].link = '<a href=\"http://' + cameras[serial].address + '\" target=\"_blank\">' + cameras[serial].name + '</a>';\n    list.push(cameras[serial]);\n}\nmsg.payload = list;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1000,
        "wires": [
            [
                "35b69cecb8ea35fe"
            ]
        ]
    },
    {
        "id": "35b69cecb8ea35fe",
        "type": "sort",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "name": "",
        "order": "ascending",
        "as_num": false,
        "target": "payload",
        "targetType": "msg",
        "msgKey": "name",
        "msgKeyType": "jsonata",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 490,
        "y": 1000,
        "wires": [
            [
                "b72607fb480b715c"
            ]
        ]
    },
    {
        "id": "4060112023210736",
        "type": "inject",
        "z": "26ed8a12ce112e81",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 620,
        "wires": [
            [
                "391451537d1f279a"
            ]
        ]
    },
    {
        "id": "9058fef700aa1987",
        "type": "inject",
        "z": "26ed8a12ce112e81",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 300,
        "wires": [
            [
                "1bdda2d779bd414b"
            ]
        ]
    },
    {
        "id": "1bdda2d779bd414b",
        "type": "influxdb in",
        "z": "26ed8a12ce112e81",
        "g": "54ca9f41add64fe2",
        "influxdb": "ca2547b7188cdec3",
        "name": "log",
        "query": "CREATE DATABASE log",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "",
        "x": 330,
        "y": 300,
        "wires": [
            [
                "82ab0ccc2403f7ca",
                "3eb50965e15b84df"
            ]
        ]
    },
    {
        "id": "82ab0ccc2403f7ca",
        "type": "debug",
        "z": "26ed8a12ce112e81",
        "name": "debug 235",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 300,
        "wires": []
    },
    {
        "id": "8d082fd7fcf66879",
        "type": "ui_form",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "",
        "label": "",
        "group": "bb2b6741360f437e",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Address",
                "value": "address",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "name": "",
            "address": ""
        },
        "payload": "",
        "submit": "Add",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 330,
        "y": 1500,
        "wires": [
            [
                "0a0a562e6325b4f1"
            ]
        ]
    },
    {
        "id": "0a0a562e6325b4f1",
        "type": "change",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "name",
                "pt": "msg",
                "to": "payload.name",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "address",
                "pt": "msg",
                "to": "payload.address",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "user",
                "pt": "msg",
                "to": "root",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "password",
                "pt": "msg",
                "to": "AXIS_ROOT_PASSWORD",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 1500,
        "wires": [
            [
                "ef292a8d5fe196b4",
                "915365a5a7182a7c"
            ]
        ]
    },
    {
        "id": "6d7ea8bfb8a49488",
        "type": "debug",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "debug 238",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1560,
        "wires": []
    },
    {
        "id": "ef292a8d5fe196b4",
        "type": "Axis device",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "",
        "preset": "9838b1d896d4b770",
        "action": "Device Info",
        "cgi": "",
        "data": "",
        "options": "",
        "filename": "",
        "x": 510,
        "y": 1560,
        "wires": [
            [
                "6d7ea8bfb8a49488",
                "acbbd1fa53311e57"
            ]
        ]
    },
    {
        "id": "cc5aa5530525d32b",
        "type": "catch",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "",
        "scope": [
            "ef292a8d5fe196b4"
        ],
        "uncaught": false,
        "x": 850,
        "y": 1560,
        "wires": [
            [
                "b23cf982a5f1157b"
            ]
        ]
    },
    {
        "id": "b23cf982a5f1157b",
        "type": "change",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Unable to connect to camera",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 1560,
        "wires": [
            [
                "28d29ae124b03f61"
            ]
        ]
    },
    {
        "id": "2f271b4f188d8575",
        "type": "ui_toast",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "position": "top right",
        "displayTime": "4",
        "highlight": "red",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 540,
        "y": 1960,
        "wires": []
    },
    {
        "id": "acbbd1fa53311e57",
        "type": "switch",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "",
        "property": "payload.authenticated",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "false",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 1620,
        "wires": [
            [
                "5bae5cea507de3b8"
            ],
            [
                "9f7963464dc9d4d3"
            ]
        ]
    },
    {
        "id": "5bae5cea507de3b8",
        "type": "change",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Cannot add camera.  Invalid credentials.",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 1620,
        "wires": [
            [
                "00dc9c9ec4b8afd2"
            ]
        ]
    },
    {
        "id": "28d29ae124b03f61",
        "type": "link out",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "link out 36",
        "mode": "link",
        "links": [
            "bfb26fb16387994f"
        ],
        "x": 1215,
        "y": 1560,
        "wires": []
    },
    {
        "id": "bfb26fb16387994f",
        "type": "link in",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "Error",
        "links": [
            "28d29ae124b03f61",
            "00dc9c9ec4b8afd2",
            "1c00af47e14291e0"
        ],
        "x": 425,
        "y": 1960,
        "wires": [
            [
                "2f271b4f188d8575"
            ]
        ]
    },
    {
        "id": "00dc9c9ec4b8afd2",
        "type": "link out",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "link out 37",
        "mode": "link",
        "links": [
            "bfb26fb16387994f"
        ],
        "x": 825,
        "y": 1620,
        "wires": []
    },
    {
        "id": "e60d9ed334ebadc0",
        "type": "comment",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "Error",
        "info": "",
        "x": 330,
        "y": 1960,
        "wires": []
    },
    {
        "id": "88a3c798a2fb8df9",
        "type": "Axis Security",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "",
        "preset": "9838b1d896d4b770",
        "address": "",
        "action": "Set account",
        "data": "",
        "options": "",
        "x": 710,
        "y": 1680,
        "wires": [
            [
                "892fd8e277dee413",
                "1489927555c565d0"
            ]
        ]
    },
    {
        "id": "9f7963464dc9d4d3",
        "type": "function",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "Set account",
        "func": "msg.camera = msg.payload;\nmsg.fmrPassword = \"fmr_\" + new Date().getTime().toString();\nmsg.payload = {\n    \"name\": \"fmr\",\n    \"password\": msg.fmrPassword,\n    \"privileges\": \"Viewer\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1680,
        "wires": [
            [
                "88a3c798a2fb8df9"
            ]
        ]
    },
    {
        "id": "2d22233054ab139b",
        "type": "catch",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "",
        "scope": [
            "88a3c798a2fb8df9"
        ],
        "uncaught": false,
        "x": 1070,
        "y": 1680,
        "wires": [
            [
                "7bb218b6d5535f2b"
            ]
        ]
    },
    {
        "id": "7bb218b6d5535f2b",
        "type": "change",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Could not create account",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 1680,
        "wires": [
            [
                "1c00af47e14291e0"
            ]
        ]
    },
    {
        "id": "1c00af47e14291e0",
        "type": "link out",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "link out 38",
        "mode": "link",
        "links": [
            "bfb26fb16387994f"
        ],
        "x": 1385,
        "y": 1680,
        "wires": []
    },
    {
        "id": "ba2a0f14177b57b4",
        "type": "function",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "Add Camera",
        "func": "var cameras = global.get(\"cameras\") || {};\nvar camera = {\n    name: msg.name,\n    serial: msg.camera.serial,\n    address: msg.address,\n    model: msg.camera.model,\n    buffer: 5,\n    acs: null,\n    fmr: msg.name.toLowerCase().replace(/\\s/g, \"_\"),\n    password: msg.fmrPassword,\n    resolution: msg.medium,\n    active: true,\n    resolutions: msg.resolutions\n}\ncameras[camera.serial] = camera;\nflow.set(\"cameras\",cameras);\nmsg.payload = camera;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1800,
        "wires": [
            [
                "ba79fb462cbfd9ef",
                "fcbf19de33f1a9c1"
            ]
        ]
    },
    {
        "id": "ba79fb462cbfd9ef",
        "type": "function",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "global.cameras",
        "func": "var cameras = global.get(\"cameras\") || {};\ncameras[msg.payload.serial] = msg.payload;\nglobal.set(\"cameras\",cameras);\nmsg.payload = cameras;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1860,
        "wires": [
            [
                "e38971d140b97b87"
            ]
        ]
    },
    {
        "id": "f8352062c98ae40c",
        "type": "file",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "",
        "filename": "/data/cameras.json",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 870,
        "y": 1860,
        "wires": [
            [
                "7c4c3ee7b47ce30e",
                "4acb91d85fb1469a"
            ]
        ]
    },
    {
        "id": "915365a5a7182a7c",
        "type": "debug",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "debug 239",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1500,
        "wires": []
    },
    {
        "id": "892fd8e277dee413",
        "type": "debug",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "debug 240",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1680,
        "wires": []
    },
    {
        "id": "fcbf19de33f1a9c1",
        "type": "debug",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "debug 241",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 1800,
        "wires": []
    },
    {
        "id": "02755cfefa4232a9",
        "type": "ui_button",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "name": "",
        "group": "6542dda0146a98e2",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Update",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 340,
        "y": 1300,
        "wires": [
            [
                "4bfd0faa5c697cf6"
            ]
        ]
    },
    {
        "id": "4617cacb43a7db1c",
        "type": "ui_text",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "group": "6542dda0146a98e2",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Name",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 710,
        "y": 1060,
        "wires": []
    },
    {
        "id": "99bcc26f1ae73ec9",
        "type": "ui_dropdown",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "name": "",
        "label": "Resolution",
        "tooltip": "",
        "place": "Select option",
        "group": "6542dda0146a98e2",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 630,
        "y": 1160,
        "wires": [
            [
                "95561d2d20e130da"
            ]
        ]
    },
    {
        "id": "1489927555c565d0",
        "type": "Axis camera",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "",
        "preset": "9838b1d896d4b770",
        "action": "Camera Info",
        "resolution": "640x360",
        "output": "Base64",
        "filename": "",
        "options": "",
        "data": "",
        "x": 510,
        "y": 1740,
        "wires": [
            [
                "b12132b9eec68a83"
            ]
        ]
    },
    {
        "id": "9c3cbb19dc54433a",
        "type": "debug",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "debug 244",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 1740,
        "wires": []
    },
    {
        "id": "b12132b9eec68a83",
        "type": "change",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "resolutions",
                "pt": "msg",
                "to": "payload.resolutions",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "medium",
                "pt": "msg",
                "to": "payload.medium",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 1740,
        "wires": [
            [
                "9c3cbb19dc54433a",
                "ba2a0f14177b57b4"
            ]
        ]
    },
    {
        "id": "362848deeb8c041e",
        "type": "change",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "payload.resolutions",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.resolution",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1160,
        "wires": [
            [
                "99bcc26f1ae73ec9"
            ]
        ]
    },
    {
        "id": "95561d2d20e130da",
        "type": "change",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "selected.resolution",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "7c4c3ee7b47ce30e",
        "type": "change",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Camera added",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Success",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 1900,
        "wires": [
            [
                "4166df8c0fb59d4e"
            ]
        ]
    },
    {
        "id": "4166df8c0fb59d4e",
        "type": "ui_toast",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "position": "top right",
        "displayTime": "3",
        "highlight": "green",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1280,
        "y": 1900,
        "wires": []
    },
    {
        "id": "c3a8eb0cdd03e8aa",
        "type": "change",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cameras",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 1300,
        "wires": [
            [
                "d8c93f8720f169d2"
            ]
        ]
    },
    {
        "id": "4bfd0faa5c697cf6",
        "type": "function",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "name": "Update",
        "func": "var cameras = global.get(\"cameras\") || {};\nvar camera = flow.get(\"selected\");\nif(!camera)\n    return;\ncamera.fmr = camera.name.toLowerCase().replace(/\\s/g, \"_\"),\ncameras[camera.serial] = camera;\nglobal.set(\"cameras\", cameras);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1300,
        "wires": [
            [
                "c3a8eb0cdd03e8aa"
            ]
        ]
    },
    {
        "id": "2a5dbdc97a9681be",
        "type": "file",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "name": "",
        "filename": "/data/cameras.json",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1010,
        "y": 1300,
        "wires": [
            [
                "20dcfbcf1d59a890"
            ]
        ]
    },
    {
        "id": "929842cacfdd1236",
        "type": "ui_numeric",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "name": "",
        "label": "Buffer",
        "tooltip": "",
        "group": "6542dda0146a98e2",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": true,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "1",
        "max": "20",
        "step": "2",
        "className": "",
        "x": 610,
        "y": 1200,
        "wires": [
            [
                "f4bfa0e75dc06256"
            ]
        ]
    },
    {
        "id": "abd348d4a5b3dc2e",
        "type": "change",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.buffer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1200,
        "wires": [
            [
                "929842cacfdd1236"
            ]
        ]
    },
    {
        "id": "f4bfa0e75dc06256",
        "type": "change",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "selected.buffer",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "363186c651fd7562",
        "type": "ui_template",
        "z": "26ed8a12ce112e81",
        "g": "960cb6dc51e99160",
        "group": "78eb60079705b811",
        "name": "Download link",
        "order": 4,
        "width": "10",
        "height": "1",
        "format": "<h3><a href=\"/docker\" _target=\"blank\">Download docker-compose.yaml</a></h3>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 360,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "d72854b26c82f511",
        "type": "http in",
        "z": "26ed8a12ce112e81",
        "g": "960cb6dc51e99160",
        "name": "",
        "url": "/docker",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 350,
        "y": 2160,
        "wires": [
            [
                "f61d64384a2d9d5b"
            ]
        ]
    },
    {
        "id": "f61d64384a2d9d5b",
        "type": "template",
        "z": "26ed8a12ce112e81",
        "g": "960cb6dc51e99160",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "version: \"3.4\"\nservices:\n",
        "output": "str",
        "x": 520,
        "y": 2160,
        "wires": [
            [
                "6555ea16c270dead"
            ]
        ]
    },
    {
        "id": "8026e7e0bf67cd5d",
        "type": "http response",
        "z": "26ed8a12ce112e81",
        "g": "960cb6dc51e99160",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "text/yaml",
            "Content-Disposition": "attachment; filename=docker-compose.yaml"
        },
        "x": 1110,
        "y": 2400,
        "wires": []
    },
    {
        "id": "6555ea16c270dead",
        "type": "change",
        "z": "26ed8a12ce112e81",
        "g": "960cb6dc51e99160",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "compose",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cameras",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 2160,
        "wires": [
            [
                "21b9d4f2525b19a7",
                "939ffd7e9e78be25"
            ]
        ]
    },
    {
        "id": "21b9d4f2525b19a7",
        "type": "split",
        "z": "26ed8a12ce112e81",
        "g": "960cb6dc51e99160",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 570,
        "y": 2220,
        "wires": [
            [
                "4771f38ee6e3fd53",
                "775313272a2c6c5a"
            ]
        ]
    },
    {
        "id": "8332450cf3330e20",
        "type": "join",
        "z": "26ed8a12ce112e81",
        "g": "960cb6dc51e99160",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 570,
        "y": 2400,
        "wires": [
            [
                "a832b605b858e3f4"
            ]
        ]
    },
    {
        "id": "9c9b1a954e8fb836",
        "type": "template",
        "z": "26ed8a12ce112e81",
        "g": "960cb6dc51e99160",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    fmr-{{payload.fmr}}:\n        image: fmr:latest\n        container_name: fmr-{{payload.fmr}}\n        restart: always\n        environment:\n            - RECORDER_ID={{payload.fmr}}\n            - INPUT_URI=rtsp://fmr:{{payload.password}}@{{payload.address}}/axis-media/media.amp?videocodec=h264&resolution={{payload.resolution}}&audio=0&compression=50\n            - PREBUFFER_MAX_SEC=60\n            - S3_ENDPOINT=http://{{payload.minio_address}}:{{payload.minio_port}}\n            - S3_ACCESS_KEY={{payload.minio_key}}\n            - S3_SECRET_KEY={{payload.minio_secret}}\n            - S3_BUCKET={{payload.fmr}}\n            - RECORDING_FILE_PREFIX={{payload.name}}\n            - MQTT_TOPIC_PREFIX=recorder\n            - MQTT_BROKER_HOST={{payload.mqtt_address}}\n            - MQTT_BROKER_PORT=1883\n            - MQTT_BROKER_USERNAME={{payload.mqtt_user}}\n            - MQTT_BROKER_PASSWORD={{payload.mqtt_password}}\n",
        "output": "str",
        "x": 860,
        "y": 2280,
        "wires": [
            [
                "6caa872a021c4207",
                "bdcbbc66525aa6ed"
            ]
        ]
    },
    {
        "id": "4771f38ee6e3fd53",
        "type": "change",
        "z": "26ed8a12ce112e81",
        "g": "960cb6dc51e99160",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.minio_address",
                "pt": "msg",
                "to": "MINIO_ADDRESS",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "payload.minio_port",
                "pt": "msg",
                "to": "MINIO_PORT",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "payload.minio_key",
                "pt": "msg",
                "to": "MINIO_KEY",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "payload.minio_secret",
                "pt": "msg",
                "to": "MINIO_SECRET",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "payload.mqtt_address",
                "pt": "msg",
                "to": "MQTT_ADDRESS",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "payload.mqtt_user",
                "pt": "msg",
                "to": "MQTT_USER",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "payload.mqtt_password",
                "pt": "msg",
                "to": "MQTT_PASSWORD",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 2280,
        "wires": [
            [
                "9c9b1a954e8fb836"
            ]
        ]
    },
    {
        "id": "6caa872a021c4207",
        "type": "function",
        "z": "26ed8a12ce112e81",
        "g": "960cb6dc51e99160",
        "name": "function 19",
        "func": "var compose = flow.get(\"compose\");\ncompose += msg.payload;\nflow.set(\"compose\",compose);\nmsg.payload = compose;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 2340,
        "wires": [
            [
                "8332450cf3330e20",
                "48cc52c270bf2922"
            ]
        ]
    },
    {
        "id": "a832b605b858e3f4",
        "type": "change",
        "z": "26ed8a12ce112e81",
        "g": "960cb6dc51e99160",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "compose",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 2400,
        "wires": [
            [
                "8026e7e0bf67cd5d"
            ]
        ]
    },
    {
        "id": "659a81100d41cf95",
        "type": "catch",
        "z": "26ed8a12ce112e81",
        "name": "",
        "scope": null,
        "uncaught": true,
        "x": 360,
        "y": 40,
        "wires": [
            [
                "1794bd058244b967"
            ]
        ]
    },
    {
        "id": "1794bd058244b967",
        "type": "debug",
        "z": "26ed8a12ce112e81",
        "name": "debug 252",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 40,
        "wires": []
    },
    {
        "id": "0223bcbde4ba566b",
        "type": "influxdb in",
        "z": "26ed8a12ce112e81",
        "g": "54ca9f41add64fe2",
        "influxdb": "ca2547b7188cdec3",
        "name": "Retention policy month",
        "query": "CREATE RETENTION POLICY \"month\" ON \"log\" DURATION 4w REPLICATION 1;",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "",
        "x": 400,
        "y": 440,
        "wires": [
            [
                "3ee94fbce8d246e9"
            ]
        ]
    },
    {
        "id": "3eb50965e15b84df",
        "type": "influxdb in",
        "z": "26ed8a12ce112e81",
        "g": "54ca9f41add64fe2",
        "influxdb": "ca2547b7188cdec3",
        "name": "Retention policy day",
        "query": "CREATE RETENTION POLICY \"day\" ON \"log\" DURATION 1d REPLICATION 1;",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "",
        "x": 390,
        "y": 360,
        "wires": [
            [
                "bd39b74ddced4dad",
                "5e96674fab6fc854"
            ]
        ]
    },
    {
        "id": "bd39b74ddced4dad",
        "type": "influxdb in",
        "z": "26ed8a12ce112e81",
        "g": "54ca9f41add64fe2",
        "influxdb": "ca2547b7188cdec3",
        "name": "Retention policy week",
        "query": "CREATE RETENTION POLICY \"week\" ON \"log\" DURATION 7d REPLICATION 1;",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "",
        "x": 390,
        "y": 400,
        "wires": [
            [
                "0223bcbde4ba566b",
                "b0b987e8ee0982af"
            ]
        ]
    },
    {
        "id": "5e96674fab6fc854",
        "type": "debug",
        "z": "26ed8a12ce112e81",
        "name": "debug 253",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 360,
        "wires": []
    },
    {
        "id": "b0b987e8ee0982af",
        "type": "debug",
        "z": "26ed8a12ce112e81",
        "name": "debug 254",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 400,
        "wires": []
    },
    {
        "id": "3ee94fbce8d246e9",
        "type": "debug",
        "z": "26ed8a12ce112e81",
        "name": "debug 255",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 440,
        "wires": []
    },
    {
        "id": "b7afe69b4331fda0",
        "type": "function",
        "z": "26ed8a12ce112e81",
        "g": "4024b3d5b06eaa70",
        "name": "Update status",
        "func": "var fmrID = msg.topic.split('/')[1];\n\nvar cameras = global.get(\"cameras\");\nvar camera = false;\nfor(var serial in cameras) {\n    if( cameras[serial].fmr === fmrID )\n        camera = cameras[serial];\n}\n\nif( !camera )\n    return;\n\ncamera.status = msg.payload.status;\nflow.set(\"cameras\",camera);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "ab3991961bd3c689",
        "type": "change",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 1100,
        "wires": [
            [
                "4617cacb43a7db1c"
            ]
        ]
    },
    {
        "id": "f7f6f2b595a4941d",
        "type": "change",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.name",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 1060,
        "wires": [
            [
                "4617cacb43a7db1c"
            ]
        ]
    },
    {
        "id": "fff6949c6b0b0cf3",
        "type": "link out",
        "z": "26ed8a12ce112e81",
        "name": "link out 40",
        "mode": "link",
        "links": [
            "ff9a15e6fd836f78"
        ],
        "x": 515,
        "y": 960,
        "wires": []
    },
    {
        "id": "ff9a15e6fd836f78",
        "type": "link in",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "name": "link in 1",
        "links": [
            "fff6949c6b0b0cf3"
        ],
        "x": 375,
        "y": 1100,
        "wires": [
            [
                "ab3991961bd3c689"
            ]
        ]
    },
    {
        "id": "20be60eebaf821f2",
        "type": "change",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "4acb91d85fb1469a",
        "type": "link out",
        "z": "26ed8a12ce112e81",
        "name": "link out 39",
        "mode": "link",
        "links": [
            "31819d8665da212f"
        ],
        "x": 1525,
        "y": 1860,
        "wires": []
    },
    {
        "id": "939ffd7e9e78be25",
        "type": "debug",
        "z": "26ed8a12ce112e81",
        "name": "debug 256",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1316.88330078125,
        "y": 2153.283203125,
        "wires": []
    },
    {
        "id": "775313272a2c6c5a",
        "type": "debug",
        "z": "26ed8a12ce112e81",
        "name": "debug 245",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 2220,
        "wires": []
    },
    {
        "id": "bdcbbc66525aa6ed",
        "type": "debug",
        "z": "26ed8a12ce112e81",
        "name": "debug 246",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 2280,
        "wires": []
    },
    {
        "id": "48cc52c270bf2922",
        "type": "debug",
        "z": "26ed8a12ce112e81",
        "name": "debug 247",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 2340,
        "wires": []
    },
    {
        "id": "9c65bbea9e3f5b22",
        "type": "influxdb in",
        "z": "26ed8a12ce112e81",
        "influxdb": "ca2547b7188cdec3",
        "name": "",
        "query": "DROP MEASUREMENT recordings\n",
        "rawOutput": false,
        "precision": "ms",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 1020,
        "y": 360,
        "wires": [
            [
                "de170babfa209de8"
            ]
        ]
    },
    {
        "id": "09e2cb0370a5d90a",
        "type": "inject",
        "z": "26ed8a12ce112e81",
        "name": "Flush recordings",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 860,
        "y": 360,
        "wires": [
            [
                "9c65bbea9e3f5b22"
            ]
        ]
    },
    {
        "id": "de170babfa209de8",
        "type": "debug",
        "z": "26ed8a12ce112e81",
        "name": "debug 265",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 360,
        "wires": []
    },
    {
        "id": "722a64131ff85381",
        "type": "debug",
        "z": "26ed8a12ce112e81",
        "name": "debug 292",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 60,
        "wires": []
    },
    {
        "id": "c18d4120205bc8b7",
        "type": "debug",
        "z": "26ed8a12ce112e81",
        "name": "debug 293",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 1240,
        "wires": []
    },
    {
        "id": "d8c93f8720f169d2",
        "type": "function",
        "z": "26ed8a12ce112e81",
        "g": "3f1fe65c928d1b37",
        "name": "Pretty",
        "func": "msg.payload = JSON.stringify(msg.payload,null,2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1300,
        "wires": [
            [
                "2a5dbdc97a9681be"
            ]
        ]
    },
    {
        "id": "e38971d140b97b87",
        "type": "function",
        "z": "26ed8a12ce112e81",
        "g": "2950bfd809e8f76c",
        "name": "Pretty",
        "func": "msg.payload = JSON.stringify(msg.payload,null,2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1860,
        "wires": [
            [
                "f8352062c98ae40c"
            ]
        ]
    }
]